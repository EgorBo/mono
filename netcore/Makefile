# Makefile.in generated by automake 1.16.1 from Makefile.am.
# netcore/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/mono
pkgincludedir = $(includedir)/mono
pkglibdir = $(libdir)/mono
pkglibexecdir = $(libexecdir)/mono
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin17.7.0
host_triplet = x86_64-apple-darwin17.7.0
target_triplet = x86_64-apple-darwin17.7.0
subdir = netcore
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/apple-target.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__extra_recursive_targets = test-recursive test-bundle-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /prj/mono/mono-netcore/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AOT_BUILD_FLAGS = 
AOT_RUN_FLAGS = 
API_VER = 2.0
AR = ar
AS = as
AUTOCONF = ${SHELL} /prj/mono/mono-netcore/missing autoconf
AUTOHEADER = ${SHELL} /prj/mono/mono-netcore/missing autoheader
AUTOMAKE = ${SHELL} /prj/mono/mono-netcore/missing automake-1.16
AWK = gawk
BOEHM_DEFINES = 
BREAKPOINT = G_STMT_START { __asm__ ("int $03"); } G_STMT_END
BTLS_ARCH = 
BTLS_CFLAGS =  
BTLS_CMAKE_ARGS =  -DBTLS_ARCH="x86_64"
BTLS_PLATFORM = x86_64
BTLS_ROOT = /prj/mono/mono-netcore/external/boringssl
BUILD_EXEEXT = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS = -Wall -Wunused -Wmissing-declarations -Wpointer-arith -Wno-cast-qual -Wwrite-strings -Wno-switch -Wno-switch-enum -Wno-unused-value -Wno-attributes -Qunused-arguments -Wno-unused-function -Wno-tautological-compare -Wno-parentheses-equality -Wno-self-assign -Wno-return-stack-address -Wno-constant-logical-operand -Wno-zero-length-array -g -O2 -Wmissing-prototypes -Wstrict-prototypes -Wnested-externs -Wno-format-zero-length -std=gnu99 -fno-strict-aliasing -fwrapv -DMONO_DLL_EXPORT -g -Werror=incompatible-pointer-types -Werror=return-type -Werror-implicit-function-declaration
CFLAGS_FOR_BUILD = -g -O2
CMAKE = /usr/local/bin/cmake
CPP = gcc -E
CPPFLAGS = -Wall -Wunused -Wmissing-declarations -Wpointer-arith -Wno-cast-qual -Wwrite-strings -Wno-switch -Wno-switch-enum -Wno-unused-value -Wno-attributes -Qunused-arguments -Wno-unused-function -Wno-tautological-compare -Wno-parentheses-equality -Wno-self-assign -Wno-return-stack-address -Wno-constant-logical-operand -Wno-zero-length-array  -D_THREAD_SAFE -DGC_MACOSX_THREADS -DUSE_MMAP -DUSE_MUNMAP -g 
CSC = /prj/mono/mono-netcore/external/roslyn-binaries/Microsoft.Net.Compilers/3.1.0/csc.exe
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -fvisibility=hidden
CXXFLAGS_COMMON =  -std=gnu++0x -fno-exceptions -fno-rtti  -stdlib=libc++
CXX_ADD_CFLAGS = 
CXX_REMOVE_CFLAGS = 
CYGPATH_W = echo
DEFAULT_PROFILE = net_4_x
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOLT_BASH = /bin/bash
DSYMUTIL = dsymutil
DTRACE = /usr/sbin/dtrace
DTRACEFLAGS = -64
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
EXTERNAL_LLVM_CONFIG = 
EXTERNAL_LLVM_CONFIG_WIN32 = 
FGREP = /usr/bin/grep -F
GDKX11 = libgdk-x11-2.0.dylib
GETTEXT_MACRO_VERSION = 0.18
GLIB_CFLAGS = -I$(top_srcdir)/mono/eglib -I$(top_builddir)/mono/eglib
GMSGFMT = /usr/local/bin/msgfmt
GMSGFMT_015 = /usr/local/bin/msgfmt
GNUC_NORETURN = __attribute__((__noreturn__))
GNUC_PRETTY = 
GNUC_UNUSED = __attribute__((__unused__))
GREP = /usr/bin/grep
GSIZE = size_t
GSIZE_FORMAT = "lu"
GSSIZE = ptrdiff_t
GTKX11 = libgtk-x11-2.0.dylib
HAVE_ALLOCA_H = 1
HAVE_MSGFMT = 
HAVE_NINJA = no
HAVE_UNISTD_H = 1
HAVE_YASM = 
HOST_CC = 
INSTALL = /usr/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTL = libintl.dylib
INVARIANT_AOT_OPTIONS = nimt-trampolines=2000,ntrampolines=10000,nrgctx-fetch-trampolines=256,ngsharedvt-trampolines=4000,nftnptr-arg-trampolines=4000
JEMALLOC_AUTOCONF_FLAGS = 
JEMALLOC_CFLAGS = 
JEMALLOC_CPPFLAGS = 
JEMALLOC_LDFLAGS = 
LD = /Applications/Xcode101.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LIBC = libc.dylib
LIBGC_CPPFLAGS = 
LIBGC_LIBS = 
LIBGC_STATIC_LIBS = 
LIBMONO_LA = libmonosgen-2.0.la
LIBOBJS = 
LIBS = -liconv   -lpthread
LIBTOOL = $(top_builddir)/doltlibtool
LIPO = lipo
LLVM_CODEGEN_LIBS = 
LN_S = ln -s
LTCOMPILE = $(top_builddir)/doltcompile $(COMPILE)
LTCXXCOMPILE = $(top_builddir)/doltcompile $(CXXCOMPILE)
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = 
MAKEINFO = ${SHELL} /prj/mono/mono-netcore/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/local/bin/gmkdir -p
MONO_CORLIB_VERSION = 92351299-EECB-4E61-A590-39382BA4F7A0
MONO_CXXLD = gcc
MONO_DL_NEED_USCORE = 0
MONO_JEMALLOC_ASSERT = 
MONO_JEMALLOC_DEFAULT = 
MONO_JEMALLOC_ENABLED = 
MONO_NATIVE_CC = 
MONO_NATIVE_CCASFLAGS = 
MONO_NATIVE_CFLAGS = 
MONO_NATIVE_COMPAT_CCASFLAGS = 
MONO_NATIVE_COMPAT_CFLAGS = 
MONO_NATIVE_COMPAT_CPPFLAGS = 
MONO_NATIVE_COMPAT_CXXFLAGS = 
MONO_NATIVE_COMPAT_LDFLAGS = 
MONO_NATIVE_CPPFLAGS = 
MONO_NATIVE_CXX = 
MONO_NATIVE_CXXFLAGS = 
MONO_NATIVE_LDFLAGS = 
MONO_NATIVE_LIBADD = 
MONO_NATIVE_LIBRARY_NAME = libmono-native
MONO_NATIVE_PLATFORM = 
MONO_NATIVE_PLATFORM_TYPE = 
MONO_NATIVE_PLATFORM_TYPE_COMPAT =  | MONO_NATIVE_PLATFORM_TYPE_COMPAT
MONO_NATIVE_PLATFORM_TYPE_UNIFIED =  | MONO_NATIVE_PLATFORM_TYPE_UNIFIED
MONO_NATIVE_UNIFIED_CCASFLAGS = 
MONO_NATIVE_UNIFIED_CFLAGS = 
MONO_NATIVE_UNIFIED_CPPFLAGS = 
MONO_NATIVE_UNIFIED_CXXFLAGS = 
MONO_NATIVE_UNIFIED_LDFLAGS = 
MSGFMT = /usr/local/bin/msgfmt
MSGFMT_015 = /usr/local/bin/msgfmt
MSGMERGE = /usr/local/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
ORDER = G_LITTLE_ENDIAN
OS = UNIX
OTOOL = otool
OTOOL64 = :
PACKAGE = mono
PACKAGE_BUGREPORT = https://github.com/mono/mono/issues/new
PACKAGE_NAME = mono
PACKAGE_STRING = mono 6.1.0
PACKAGE_TARNAME = mono
PACKAGE_URL = 
PACKAGE_VERSION = 6.1.0
PATHSEP = /
PATH_SEPARATOR = :
PIDTYPE = int
PKG_CONFIG = /usr/local/bin/pkg-config
PLATFORM_AOT_SUFFIX = .dylib
RANLIB = ranlib -no_warning_for_no_symbols
RID = osx-x64
SEARCHSEP = :
SED = /usr/local/bin/gsed
SET_MAKE = 
SGEN_DEFINES = -DHAVE_SGEN_GC
SHARED_CFLAGS = -fvisibility=hidden
SHELL = /bin/sh
SIZEOF_VOID_P = 8
SQLITE = libsqlite.0.dylib
SQLITE3 = libsqlite3.0.dylib
STRIP = strip
TEST_PROFILE = default
USE_NLS = no

# COREHOST_TRACE=1 
VERSION := 3.0.0-preview4-27514-06
VTUNE_CFLAGS = 
VTUNE_LIBS = 
WERROR_CFLAGS = 
X11 = libX11.dylib
XATTR_LIB = 
XGETTEXT = /usr/local/bin/xgettext
XGETTEXT_015 = /usr/local/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XINERAMA = libXinerama.so.1
XMKMF = 
abs_builddir = /prj/mono/mono-netcore/netcore
abs_srcdir = /prj/mono/mono-netcore/netcore
abs_top_builddir = /prj/mono/mono-netcore
abs_top_srcdir = /prj/mono/mono-netcore
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
arch_target = amd64
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin17.7.0
build_alias = 
build_cpu = x86_64
build_os = darwin17.7.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
docs_dir = 
dvidir = ${docdir}
exec_prefix = ${prefix}
export_ldflags = 
extra_runtime_ldflags = 
host = x86_64-apple-darwin17.7.0
host_alias = 
host_cpu = x86_64
host_os = darwin17.7.0
host_vendor = apple
htmldir = ${docdir}
ikvm_native_dir = ikvm-native
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /prj/mono/mono-netcore/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libgc_dir = 
libgdiplus_install_loc = /Library/Frameworks/Mono.framework/Versions/Current/lib/libgdiplus.dylib
libgdiplus_loc = /Library/Frameworks/Mono.framework/Versions/Current/lib/libgdiplus.dylib
libmono_cflags = -D_THREAD_SAFE
libmono_ldflags =  -liconv   -lpthread
libsuffix = .dylib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mcs_topdir = /prj/mono/mono-netcore/mcs
mcs_topdir_from_srcdir = $(top_builddir)/mcs
mkdir_p = $(MKDIR_P)
mono_build_root = /prj/mono/mono-netcore
mono_cfg_dir = /prj/mono/mono-netcore/runtime/etc
mono_msvc_build_bin_dir = 
mono_msvc_build_dir = 
mono_msvc_build_lib_dir = 
mono_runtime = mono/mini/mono
mono_runtime_wrapper = mono/mini/mono
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
reloc_libdir = lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs = 
sysconfdir = ${prefix}/etc
target = x86_64-apple-darwin17.7.0
target_alias = 
target_cpu = x86_64
target_os = darwin17.7.0
target_vendor = apple
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
NETCORESDK_VERSION = 3.0.100-preview4-010759
NETCORESDK_FILE = dotnet-sdk-$(NETCORESDK_VERSION)-osx-x64.tar.gz
URL := https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$(NETCORESDK_VERSION)/$(NETCORESDK_FILE)
SHAREDRUNTIME := shared/Microsoft.NETCore.App/$(VERSION)
COREFX_BINDIR = $(COREFX_ROOT)/artifacts/bin

#
# Running tests:
#  - Tests are run using dotnet bin/Debug/netcoreapp3.0/<...>.dll
# - One of the test helper assemblies contains pinvokes for System.Globalization.Native, so
#   the dylib has to be in the current working directory when running, since the runtime will
#   try to load the dylib from the same directory as the assembly which refers to it.
#   It has to be symlinked otherwise we load 2 copies of it which fails.
# - RemoteExecutorConsoleApp.exe needs to be in the current directory, since
#   its executed as: 'dotnet RemoteExecutorConsoleApp.exe <test assembly> ...'
# - MONO_PATH needs to be set to the bin dir so the remote executor can find the
#   test assembly.
# - The RemoteExecutorConsoleApp.runtimeconfig.json needs to be changed to use the proper
#   framework version.
#
TEST_SUITES = \
	System.Runtime.Tests \
	System.Runtime.CompilerServices.Unsafe.Tests \
	System.Collections.Tests


# The binary directory under $(COREFIX_BINDIR)
System.Runtime.CompilerServices.Unsafe.Tests_PROFILE = netstandard-Debug
System.Runtime.Tests_PROFILE = netcoreapp-Unix-Debug
System.Runtime.Tests_XUNIT_ARGS = @../excludes-System.Runtime.Tests.rsp
System.Collections.Tests_PROFILE = netcoreapp-Debug
System.Reflection.Emit.Tests_PROFILE = netcoreapp-Debug
System.Reflection.Emit.Tests_XUNIT_ARGS = @../excludes-System.Reflection.Emit.Tests.rsp
System.Reflection.Emit.ILGeneration.Tests_PROFILE = netcoreapp-Debug
System.Reflection.Emit.Lightweight.Tests_PROFILE = netcoreapp-Debug
System.Threading.Tests_PROFILE = netcoreapp-Debug
System.Threading.Thread.Tests_PROFILE = netcoreapp-Debug
FEED_BASE_URL = https://dotnetfeed.blob.core.windows.net/dotnet-core
TEST_ASSETS_URL = https://dotnetfeed.blob.core.windows.net/dotnet-core/corefx-tests/4.6.0-preview4.19156.10/OSX.x64/netcoreapp/corefx-test-assets.xml
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign netcore/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign netcore/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
test-local: 
test-bundle-local: 
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

test: test-am

test-am: test-local

test-bundle: test-bundle-am

test-bundle-am: test-bundle-local

uninstall-am:

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	cscopelist-am ctags-am distclean distclean-generic \
	distclean-libtool distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags-am test-am test-bundle-am test-bundle-local test-local \
	uninstall uninstall-am

.PRECIOUS: Makefile


$(NETCORESDK_FILE):
	curl $(URL) --output $(NETCORESDK_FILE)
	tar -xvf $(NETCORESDK_FILE)

build-sample:
	dotnet build sample/HelloWorld

run-sample:
	COMPlus_DebugWriteToStdErr=1 ./dotnet --fx-version "$(VERSION)" sample/HelloWorld/bin/Debug/netcoreapp3.0/HelloWorld.dll

bcl:
	$(MAKE) -C ../mcs/class/System.Private.CoreLib
	cp ../mcs/class/System.Private.CoreLib/bin/x64/System.Private.CoreLib.dll $(SHAREDRUNTIME)

runtime:
	$(MAKE) -C ../mono
	cp ../mono/mini/.libs/libmonosgen-2.0.dylib $(SHAREDRUNTIME)/libcoreclr.dylib

link-mono:
	cp ../mono/mini/.libs/libmonosgen-2.0.dylib $(SHAREDRUNTIME)/libcoreclr.dylib
	cp ../mcs/class/System.Private.CoreLib/bin/x64/System.Private.CoreLib.{dll,pdb} $(SHAREDRUNTIME)

prepare: $(NETCORESDK_FILE) link-mono

nupkg:
	nuget pack runtime.nuspec -properties VERSION=6.1.0\;RID=osx-x64\;PLATFORM_AOT_SUFFIX=.dylib

check-env:
	@if [ "x$(COREFX_ROOT)" == "x" ]; then echo "Set COREFX_ROOT to the root of the fully built corefx repo."; exit 1; fi

build-%: check-env
	cd gen-xunit-runner && dotnet run ../tests $(COREFX_ROOT) $(COREFX_BINDIR)/$*/$($*_PROFILE)/$*.dll -notrait category=nonosxtests -notrait category=failing -notrait category=Outerloop -notrait category=nonnetcoreapptests $($*_XUNIT_ARGS) $(XUNIT_ARGS)
	cp $(COREFX_BINDIR)/RemoteExecutorConsoleApp/netstandard-Debug/RemoteExecutorConsoleApp.* tests/$*
	cp $(COREFX_BINDIR)/System.Runtime.Tests/netcoreapp-Unix-Debug/TestLoadAssembly.dll tests/$*
	ln -sf $(CURDIR)/$(SHAREDRUNTIME)/System.Globalization.Native.dylib tests/$*
	sed -e 's/9.9.9/$(VERSION)/g' < tests/$*/RemoteExecutorConsoleApp.runtimeconfig.json > 2 && mv 2 tests/$*/RemoteExecutorConsoleApp.runtimeconfig.json
	cd tests/$* && dotnet build

run-%: check-env
	cd tests/$* && MONO_PATH=bin/Debug/netcoreapp3.0 MONO_ENV_OPTIONS="--debug --explicit-null-checks" COMPlus_DebugWriteToStdErr=1 ../../dotnet bin/Debug/netcoreapp3.0/$*-runner.dll

all: $(addprefix build-, $(TEST_SUITES))

check: $(addprefix run-, $(TEST_SUITES))

clean:
	rm -rf sdk shared host dotnet tests LICENSE.txt ThirdPartyNotices.txt $(NETCORESDK_FILE)

# e.g. `make xtest-System.Collections.Tests COREFX_ROOT=/prj/corefx`
xtest-%: prepare check-env dl-test-assets
	ln -sf $(CURDIR)/$(SHAREDRUNTIME)/System.Globalization.Native.dylib assets/extracted/$*/
	# we need COREFX_ROOT only for these two files:
	cp $(COREFX_BINDIR)/runtime/netcoreapp-OSX-Debug-x64/xunit.console.deps.json assets/extracted/$*/
	cp $(COREFX_BINDIR)/runtime/netcoreapp-OSX-Debug-x64/CoreFx.Private.TestUtilities.dll assets/extracted/$*/
	cd assets/extracted/$* && \
	(sed -i -e 's/9.9.9/$(VERSION)/g' RemoteExecutorConsoleApp.runtimeconfig.json || true) && \
	COMPlus_DebugWriteToStdErr=1 $(CURDIR)/./dotnet --fx-version "$(VERSION)" xunit.console.dll $*.dll \
		-notrait category=outerloop -notrait category=nonosxtests -notrait category=failing \
		-notrait category=nonnetcoreapptests -noappdomain -noshadow -parallel all -nunit TestResult-$*-netcore-xunit.xml \
		$(shell grep -v '^#\|^$$' $(CURDIR)/excludes-$*.rsp) $(FIXTURE)

xtest-all: $(addprefix xtest-, $(TEST_SUITES))

corefx-test-assets.xml:
	wget $(TEST_ASSETS_URL)

dl-test-assets: corefx-test-assets.xml .stamp-dl-test-assets

.stamp-dl-test-assets:
	python dl-test-assets.py corefx-test-assets.xml $(FEED_BASE_URL) assets
	touch $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
